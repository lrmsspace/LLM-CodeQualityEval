<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.16.0"/>
    <errors>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/c/Medium/1540-find-players-with-zero-or-one-losses.c">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="0" column="0"/>
        </error>
        <error id="AssignmentAddressToInteger" severity="portability" msg="Assigning a pointer to an integer is not portable." verbose="Assigning a pointer to an integer (int/long/etc) is not portable across different platforms and compilers. For example in 32-bit Windows and linux they are same width, but in 64-bit Windows and linux they are of different width. In worst case you end up assigning 64-bit address to 32-bit integer. The safe way is to store addresses only in pointer types (or typedefs like uintptr_t)." cwe="758" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/c/Medium/1540-find-players-with-zero-or-one-losses.c">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="61" column="15"/>
        </error>
        <error id="AssignmentAddressToInteger" severity="portability" msg="Assigning a pointer to an integer is not portable." verbose="Assigning a pointer to an integer (int/long/etc) is not portable across different platforms and compilers. For example in 32-bit Windows and linux they are same width, but in 64-bit Windows and linux they are of different width. In worst case you end up assigning 64-bit address to 32-bit integer. The safe way is to store addresses only in pointer types (or typedefs like uintptr_t)." cwe="758" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/c/Medium/1540-find-players-with-zero-or-one-losses.c">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="62" column="15"/>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;resultColumnSizes&apos; can be declared as pointer to const" verbose="Variable &apos;resultColumnSizes&apos; can be declared as pointer to const" cwe="398" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/c/Medium/1540-find-players-with-zero-or-one-losses.c">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="42" column="10" info="Variable &apos;resultColumnSizes&apos; can be declared as pointer to const"/>
            <symbol>resultColumnSizes</symbol>
        </error>
        <error id="pointerSize" severity="warning" msg="Size of pointer &apos;result&apos; used instead of size of its data." verbose="Size of pointer &apos;result&apos; used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write &apos;sizeof(*result)&apos;." cwe="467" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/c/Medium/1540-find-players-with-zero-or-one-losses.c">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="41" column="10"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;resultColumnSizes&apos; is assigned a value that is never used." verbose="Variable &apos;resultColumnSizes&apos; is assigned a value that is never used." cwe="563" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/c/Medium/1540-find-players-with-zero-or-one-losses.c">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="42" column="28"/>
            <symbol>resultColumnSizes</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;winner&apos; is assigned a value that is never used." verbose="Variable &apos;winner&apos; is assigned a value that is never used." cwe="563" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/c/Medium/1540-find-players-with-zero-or-one-losses.c">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="55" column="20"/>
            <symbol>winner</symbol>
        </error>
        <error id="unusedAllocatedMemory" severity="style" msg="Variable &apos;resultColumnSizes&apos; is allocated memory that is never used." verbose="Variable &apos;resultColumnSizes&apos; is allocated memory that is never used." cwe="563" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/c/Medium/1540-find-players-with-zero-or-one-losses.c">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="42" column="43"/>
            <symbol>resultColumnSizes</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;findWinners&apos; is never used." verbose="The function &apos;findWinners&apos; is never used." cwe="561">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\c\Medium\1540-find-players-with-zero-or-one-losses.c" line="38" column="0"/>
            <symbol>findWinners</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: 108/836 (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: 108/836 (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>

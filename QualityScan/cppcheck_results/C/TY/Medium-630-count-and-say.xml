<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.16.0"/>
    <errors>
        <error id="memleak" severity="error" msg="Memory leak: temp" verbose="Memory leak: temp" cwe="401" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="32" column="9"/>
            <symbol>temp</symbol>
        </error>
        <error id="memleak" severity="error" msg="Memory leak: temp2" verbose="Memory leak: temp2" cwe="401" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="32" column="9"/>
            <symbol>temp2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;count&apos; can be reduced." verbose="The scope of the variable &apos;count&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="28" column="24"/>
            <symbol>count</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ch&apos; can be reduced." verbose="The scope of the variable &apos;ch&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="29" column="10"/>
            <symbol>ch</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;temp2&apos; can be declared as pointer to const" verbose="Variable &apos;temp2&apos; can be declared as pointer to const" cwe="398" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="27" column="11" info="Variable &apos;temp2&apos; can be declared as pointer to const"/>
            <symbol>temp2</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;temp2&apos; is assigned a value that is never used." verbose="Variable &apos;temp2&apos; is assigned a value that is never used." cwe="563" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="27" column="17"/>
            <symbol>temp2</symbol>
        </error>
        <error id="unusedAllocatedMemory" severity="style" msg="Variable &apos;temp2&apos; is allocated memory that is never used." verbose="Variable &apos;temp2&apos; is allocated memory that is never used." cwe="563" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="27" column="19"/>
            <symbol>temp2</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: k" verbose="Unused variable: k" cwe="563" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="28" column="15"/>
            <symbol>k</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: l" verbose="Unused variable: l" cwe="563" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="28" column="18"/>
            <symbol>l</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: m" verbose="Unused variable: m" cwe="563" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/630-count-and-say.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="28" column="21"/>
            <symbol>m</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;countAndSay&apos; is never used." verbose="The function &apos;countAndSay&apos; is never used." cwe="561">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\630-count-and-say.c" line="24" column="0"/>
            <symbol>countAndSay</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: 108/836 (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: 108/836 (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>

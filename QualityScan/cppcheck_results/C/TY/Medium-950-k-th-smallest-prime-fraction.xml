<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.16.0"/>
    <errors>
        <error id="CastIntegerToAddressAtReturn" severity="portability" msg="Returning an integer in a function with pointer return type is not portable." verbose="Returning an integer (int/long/etc) in a function with pointer return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit integer down to 32-bit pointer. The safe way is to always return a pointer." cwe="758" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/950-k-th-smallest-prime-fraction.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\950-k-th-smallest-prime-fraction.c" line="49" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;m&apos; can be reduced." verbose="The scope of the variable &apos;m&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/950-k-th-smallest-prime-fraction.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\950-k-th-smallest-prime-fraction.c" line="29" column="21"/>
            <symbol>m</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;arr&apos; can be declared as pointer to const" verbose="Parameter &apos;arr&apos; can be declared as pointer to const" cwe="398" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/950-k-th-smallest-prime-fraction.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\950-k-th-smallest-prime-fraction.c" line="28" column="36" info="Parameter &apos;arr&apos; can be declared as pointer to const"/>
            <symbol>arr</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;returnSize&apos; can be declared as pointer to const" verbose="Parameter &apos;returnSize&apos; can be declared as pointer to const" cwe="398" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/950-k-th-smallest-prime-fraction.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\950-k-th-smallest-prime-fraction.c" line="28" column="66" info="Parameter &apos;returnSize&apos; can be declared as pointer to const"/>
            <symbol>returnSize</symbol>
        </error>
        <error id="uninitvar" severity="warning" msg="Uninitialized variable: y" verbose="Uninitialized variable: y" cwe="457" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Medium/950-k-th-smallest-prime-fraction.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\950-k-th-smallest-prime-fraction.c" line="49" column="33"/>
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\950-k-th-smallest-prime-fraction.c" line="31" column="19" info="Assuming condition is false"/>
            <symbol>y</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;kthSmallestPrimeFraction&apos; is never used." verbose="The function &apos;kthSmallestPrimeFraction&apos; is never used." cwe="561">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Medium\950-k-th-smallest-prime-fraction.c" line="28" column="0"/>
            <symbol>kthSmallestPrimeFraction</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: 108/836 (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: 108/836 (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>

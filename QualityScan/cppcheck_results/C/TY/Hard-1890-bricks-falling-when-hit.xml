<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.16.0"/>
    <errors>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Hard/1890-bricks-falling-when-hit.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Hard\1890-bricks-falling-when-hit.c" line="0" column="0"/>
        </error>
        <error id="CastIntegerToAddressAtReturn" severity="portability" msg="Returning an integer in a function with pointer return type is not portable." verbose="Returning an integer (int/long/etc) in a function with pointer return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit integer down to 32-bit pointer. The safe way is to always return a pointer." cwe="758" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Hard/1890-bricks-falling-when-hit.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Hard\1890-bricks-falling-when-hit.c" line="96" column="5"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;gridColSize&apos; can be declared as pointer to const" verbose="Parameter &apos;gridColSize&apos; can be declared as pointer to const" cwe="398" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Hard/1890-bricks-falling-when-hit.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Hard\1890-bricks-falling-when-hit.c" line="53" column="47" info="Parameter &apos;gridColSize&apos; can be declared as pointer to const"/>
            <symbol>gridColSize</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;res&apos; can be declared as pointer to const" verbose="Variable &apos;res&apos; can be declared as pointer to const" cwe="398" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Hard/1890-bricks-falling-when-hit.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Hard\1890-bricks-falling-when-hit.c" line="55" column="10" info="Variable &apos;res&apos; can be declared as pointer to const"/>
            <symbol>res</symbol>
        </error>
        <error id="unusedAllocatedMemory" severity="style" msg="Variable &apos;res&apos; is allocated memory that is never used." verbose="Variable &apos;res&apos; is allocated memory that is never used." cwe="563" file0="F:/Benchmark/GitMaterial_tongyi/ProblemInfoCrawler/output/c/Hard/1890-bricks-falling-when-hit.c">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Hard\1890-bricks-falling-when-hit.c" line="55" column="29"/>
            <symbol>res</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;hitBricks&apos; is never used." verbose="The function &apos;hitBricks&apos; is never used." cwe="561">
            <location file="F:\Benchmark\GitMaterial_tongyi\ProblemInfoCrawler\output\c\Hard\1890-bricks-falling-when-hit.c" line="53" column="0"/>
            <symbol>hitBricks</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: 108/836 (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: 108/836 (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>

<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.16.0"/>
    <errors>
        <error id="knownConditionTrueFalse" severity="style" msg="Return value &apos;slow==fast&apos; is always true" verbose="Return value &apos;slow==fast&apos; is always true" cwe="571" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/cpp/Easy/31-linked-list-cycle.cpp">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\cpp\Easy\31-linked-list-cycle.cpp" line="69" column="21" info="Return value &apos;slow==fast&apos; is always true"/>
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\cpp\Easy\31-linked-list-cycle.cpp" line="64" column="20" info="Assuming that condition &apos;slow!=fast&apos; is not redundant"/>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;slow&apos; can be declared as pointer to const" verbose="Variable &apos;slow&apos; can be declared as pointer to const" cwe="398" file0="F:/Benchmark/GitMaterial_Tabnine/ProblemInfoCrawler/output/cpp/Easy/31-linked-list-cycle.cpp">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\cpp\Easy\31-linked-list-cycle.cpp" line="38" column="19" info="Variable &apos;slow&apos; can be declared as pointer to const"/>
            <symbol>slow</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;hasCycle&apos; is never used." verbose="The function &apos;hasCycle&apos; is never used." cwe="561">
            <location file="F:\Benchmark\GitMaterial_Tabnine\ProblemInfoCrawler\output\cpp\Easy\31-linked-list-cycle.cpp" line="35" column="0"/>
            <symbol>hasCycle</symbol>
        </error>
        <error id="checkersReport" severity="information" msg="Active checkers: 167/836 (use --checkers-report=&lt;filename&gt; to see details)" verbose="Active checkers: 167/836 (use --checkers-report=&lt;filename&gt; to see details)"/>
    </errors>
</results>
